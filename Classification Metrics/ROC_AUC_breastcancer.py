# -*- coding: utf-8 -*-
"""ROC_BreastCancer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14VBltkdcbe5K5g7VXf4yB46HxYF2warK
"""

from sklearn.model_selection import train_test_split
#from sklearn.metrics import plot_confusion_matrix,accuracy_score,precision_score,recall_score
from sklearn.metrics import roc_curve,auc
from sklearn import svm,datasets
from sklearn.ensemble import RandomForestClassifier
import matplotlib.pyplot as plt

# Import iris dataset
data_cancer = datasets.load_breast_cancer()
# 
X,y = data_cancer.data,data_cancer.target
# Split the dataset into training and test data
X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=10)
# Define the SVM classifier
classifier = svm.SVC(C=0.01,kernel='linear')
classifier2 = RandomForestClassifier(n_estimators=5,random_state=0)
#Fit the classifier
classifier.fit(X_train,y_train)
#
classifier2.fit(X_train,y_train)
# Plot the ROC Curve
fpr,tpr,threshold = roc_curve(y_test,classifier.predict(X_test),pos_label=1)
fpr2,tpr2,threshold2 = roc_curve(y_test,classifier2.predict(X_test),pos_label=1)
plt.figure()
plt.plot(fpr,tpr,color ='blue',label='ROC curve of Classifier 1 (SVM)')
plt.plot(fpr2,tpr2,color ='orange',label='ROC curve of Classifier (Random Forest)')
plt.plot([0,1],[0,1],color='black',linestyle = 'dashed', label='ROC curve of a random classifier')
plt.xlabel('False Positive Rate (1-Specificity)')
plt.ylabel('True Positive Rate (Sensitivity)')
plt.xlim([0,1.0])
plt.ylim([0.0,1.0])
plt.legend()
plt.show()
# Print the AUC score for two classifiers
print("The AUC score of Classifier 1 is:",round(auc(fpr,tpr),3))
print("The AUC score of Classifier 2 is:",round(auc(fpr2,tpr2),3))